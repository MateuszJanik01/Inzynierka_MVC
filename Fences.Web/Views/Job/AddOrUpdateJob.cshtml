@model Fences.ViewModels.VM.AddOrUpdateJobVm

@{
    ViewData["Title"] = $"{ViewBag.ActionType} Job";
}

<h1>AddOrUpdateJob</h1>

<h4>AddOrUpdateJobVm</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddOrUpdateJob">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            
            @if (User.IsInRole("Admin"))
            {
                <div class="form-group" hidden>
                    <label asp-for="UserId" class="control-label"></label>
                    <input asp-for="UserId" class="form-control" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="Town" class="control-label"></label>
                    <input asp-for="Town" class="form-control" />
                    <span asp-validation-for="Town" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="Street" class="control-label"></label>
                    <input asp-for="Street" class="form-control" />
                    <span asp-validation-for="Street" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="Number" class="control-label"></label>
                    <input asp-for="Number" class="form-control" />
                    <span asp-validation-for="Number" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="ZipCode" class="control-label"></label>
                    <input asp-for="ZipCode" class="form-control" />
                    <span asp-validation-for="ZipCode" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="JobType" class="control-label"></label>
                    <select asp-for="JobType" class="form-control" asp-items="@ViewBag.FenceTypes"></select>
                    <span asp-validation-for="JobType" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="RegistrationDate" class="control-label"></label>
                    <input asp-for="RegistrationDate" class="form-control" />
                    <span asp-validation-for="RegistrationDate" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateOfExecution" class="control-label"></label>
                    <input asp-for="DateOfExecution" class="form-control" type="date" />
                    <span asp-validation-for="DateOfExecution" class="text-danger"></span>
                </div>
                <div class="form-group" hidden>
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            }
            @if (User.IsInRole("User"))
            {
                <div class="form-group" hidden>
                    <label asp-for="UserId" class="control-label"></label>
                    <input asp-for="UserId" class="form-control" />
                    <span asp-validation-for="UserId" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Town" class="control-label"></label>
                    <input asp-for="Town" class="form-control" />
                    <span asp-validation-for="Town" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Street" class="control-label"></label>
                    <input asp-for="Street" class="form-control" />
                    <span asp-validation-for="Street" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Number" class="control-label"></label>
                    <input asp-for="Number" class="form-control" />
                    <span asp-validation-for="Number" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ZipCode" class="control-label"></label>
                    <input asp-for="ZipCode" class="form-control" />
                    <span asp-validation-for="ZipCode" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="JobType" class="control-label"></label>
                    <select asp-for="JobType" class="form-control" asp-items="@ViewBag.FenceTypes"></select>
                    <span asp-validation-for="JobType" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateOfExecution" class="control-label"></label>
                    <input asp-for="DateOfExecution" class="form-control" type="date" id="dateOfExecution" />
                    <span asp-validation-for="DateOfExecution" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                <textarea asp-for="Description" class="form-control"></textarea>
                <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            }
            <div class="form-group">
                <input type="submit" value="@ViewBag.ActionType" class="btn btn-primary mt-2" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="mt-3">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>
        // Lista zajêtych dat (przekazana z kontrolera)
        var takenDates = @Html.Raw(Json.Serialize(ViewBag.TakenDates));

        // Funkcja sprawdzaj¹ca, czy data jest zajêta
        function isDateTaken(date) {
            return takenDates.includes(date.toISOString().split('T')[0]);
        }

        // Funkcja do wy³¹czania zajêtych dat
        function updateDateInput() {
            var dateInput = document.getElementById('dateOfExecution');
            var today = new Date();
            var minDate = today.toISOString().split('T')[0];
            var maxDate = new Date();
            maxDate.setFullYear(today.getFullYear() + 1); // Ustawiamy maksymaln¹ datê na rok do przodu
            maxDate = maxDate.toISOString().split('T')[0];

            // Ustawiamy min i max datê dla inputu
            dateInput.setAttribute('min', minDate);
            dateInput.setAttribute('max', maxDate);

            // Nas³uchujemy zmian daty
            dateInput.addEventListener('change', function (e) {
                var selectedDate = new Date(e.target.value);
                if (isDateTaken(selectedDate)) {
                    e.target.value = ''; // Resetuj pole
                }
            });
        }

        // Wywo³ujemy funkcjê blokuj¹c¹ zajête daty przy ³adowaniu strony
        document.addEventListener('DOMContentLoaded', updateDateInput);
    </script>
}
